version: 2
jobs:

  code_checkout:
    docker:
      - image: circleci/golang:1.11

    steps:
      - checkout
      - attach_workspace:
          at: ~/geth
      - persist_to_workspace:
          root: .
          paths: .

  lint:
    docker:
      - image: circleci/golang:1.11

    working_directory: /go/src/github.com/celo-org/geth

    steps:
      - attach_workspace:
          at: ~/geth
      - run:
          name: Lint checks
          command: |
            cd ~/geth
            build/env.sh go run build/ci.go lint

  unit-tests-no-coverage:
    docker:
      - image: circleci/golang:1.11

    working_directory: /go/src/github.com/celo-org/geth
    steps:
      - attach_workspace:
          at: ~/geth
      - run:
          name: Tests without coverage
          command: |
            set -e
            cd ~/geth
            # Some tests are flaky. Run twice, so that, at least one invocation passes.
            build/env.sh go run build/ci.go test || build/env.sh go run build/ci.go test

  unit-tests-with-coverage:
    docker:
      - image: circleci/golang:1.11

    working_directory: /go/src/github.com/celo-org/geth
    steps:
      - attach_workspace:
          at: ~/geth
      - run:
          name: Tests with coverage
          command: |
            set -e
            cd ~/geth
            # Many tests are flaky and fail under coverage. We won't fail if this step fails.
            # We already are running all the tests, so, if they fail, we still fail.
            build/env.sh go run build/ci.go test -coverage && bash <(curl -s https://codecov.io/bash) || true

  end-to-end-tests:
    docker:
      - image: circleci/golang:1.11

    working_directory: /go/src/github.com/celo-org/geth
    steps:
      - attach_workspace:
          at: ~/geth
      - run:
          name: End to end test
          command: |
            # Use -p since it does not fail if the dir exists. It fails if the directory does not exist and
            # it fails to create the directory though.
            set -euo pipefail
            cd ~/geth
            mkdir -p ~/.ssh/
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config

            export CELO_MONOREPO_DIR="/tmp/celo"
            git clone --depth 1 git@github.com:celo-org/celo-monorepo.git ${CELO_MONOREPO_DIR}
            cd ${CELO_MONOREPO_DIR}/packages/celotool
            yarn
            ./ci_test_transactions.sh local ${GETH_DIR}
            ./ci_test_sync.sh local ${GETH_DIR}

workflows:
  version: 2
  build:
    jobs:
      - code_checkout
      - lint:
          requires:
            - code_checkout
      - unit-tests-no-coverage:
          requires:
            - code_checkout
      - unit-tests-with-coverage:
          requires:
            - code_checkout
      # Disabled for now, since it is failing due to lack of access to celo-monorepo
      # https://circleci.com/gh/celo-org/geth/1087
      # - end-to-end-tests:
          # requires:
            # - code_checkout
