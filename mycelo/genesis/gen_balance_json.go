// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package genesis

import (
	"encoding/json"
	"math/big"

	"github.com/celo-org/celo-blockchain/common"
	"github.com/celo-org/celo-blockchain/common/decimal/bigintstr"
)

var _ = (*BalanceMarshaling)(nil)

// MarshalJSON marshals as JSON.
func (b Balance) MarshalJSON() ([]byte, error) {
	type Balance struct {
		Account common.Address       `json:"account"`
		Amount  *bigintstr.BigIntStr `json:"amount"`
	}
	var enc Balance
	enc.Account = b.Account
	enc.Amount = (*bigintstr.BigIntStr)(b.Amount)
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (b *Balance) UnmarshalJSON(input []byte) error {
	type Balance struct {
		Account *common.Address      `json:"account"`
		Amount  *bigintstr.BigIntStr `json:"amount"`
	}
	var dec Balance
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Account != nil {
		b.Account = *dec.Account
	}
	if dec.Amount != nil {
		b.Amount = (*big.Int)(dec.Amount)
	}
	return nil
}
