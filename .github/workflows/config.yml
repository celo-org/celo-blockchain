name: celo-blockchain

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

concurrency: 
  group: ${{ github.head_ref }}
  cancel-in-progress: true

env:
  # Increment these to force cache rebuilding
  SYSTEM_CONTRACTS_CACHE_VERSION: 3
  CHECKOUT_MONOREPO_CACHE_VERSION: 5
  GO_VERSION: '1.17.5'
  # Location where compiled system contracts are stored under the root of this
  # repo.
  SYSTEM_CONTRACTS_PATH: "compiled-system-contracts"

jobs:
  prepare-system-contracts:
    name: Build celo-monorepo
    runs-on: [self-hosted, blockchain, 8-cpu]
    env:
      NODE_VERSION: 12
      PYTHON_VERSION: '2.7'
      CONTRACTS_BUILD_PATH: packages/protocol/build/contracts

    steps:
    - name: Checkout celo-blockchain repo
      uses: actions/checkout@v3
      with:
        path: geth
    - name: Get monorepo commit
      run: echo "MONOREPO_COMMIT=$(cat ./geth/monorepo_commit)" >> $GITHUB_ENV
    - name: Get monorepo commit id
      run: echo "MONOREPO_COMMIT_ID=${{ hashFiles('./geth/monorepo_commit') }}" >> $GITHUB_ENV
    - name: Restore celo-monorepo cache
      id: celo-monorepo-cache
      uses: actions/cache@v3
      with:
        path: celo-monorepo
        key: celo-monorepo-cache-${{ env.MONOREPO_COMMIT_ID }}-${{ env.CHECKOUT_MONOREPO_CACHE_VERSION }}
        restore-keys: |
          celo-monorepo-cache-
    # If there is a cached version, there is no need to rebuild it
    - name: Conditionally checkout monorepo
      if: steps.celo-monorepo-cache.outputs.cache-hit != 'true'
      uses: actions/checkout@v3
      with:
        repository: celo-org/celo-monorepo
        path: celo-monorepo
        ref: ${{ env.MONOREPO_COMMIT }}
    - name: Conditionally setup Node.js
      if: steps.celo-monorepo-cache.outputs.cache-hit != 'true'
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: yarn
        cache-dependency-path: celo-monorepo/yarn.lock
    # Python is required for node-gyp rebuild
    - name: Conditionally setup python
      if: steps.celo-monorepo-cache.outputs.cache-hit != 'true'
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Conditionally build monorepo
      if: steps.celo-monorepo-cache.outputs.cache-hit != 'true'
      run: |
        cd celo-monorepo
        yarn
        yarn build
        cd packages/protocol
        yarn run build:sol
    - name: Upload built system contracts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: system-contracts
        path: 'celo-monorepo/${{ env.CONTRACTS_BUILD_PATH }}'

  go-modules:
    name: Setup go
    runs-on: [self-hosted, blockchain, 8-cpu]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Setup go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        check-latest: false
        cache: true

  end-to-end-cip35-eth-compatibility-test:
    name: End-to-end CIP35-eth compatibility test
    runs-on: [self-hosted, blockchain, 8-cpu]
    env:
      NODE_VERSION: 12

    needs:
    - go-modules
    - prepare-system-contracts

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        path: geth
    - name: Setup golang
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}
        check-latest: false
        cache: true
        cache-dependency-path: geth/go.sum
    - name: Get monorepo commit
      run: echo "MONOREPO_COMMIT=$(cat ./geth/monorepo_commit)" >> $GITHUB_ENV
    - name: Get monorepo commit id
      run: echo "MONOREPO_COMMIT_ID=${{ hashFiles('./geth/monorepo_commit') }}" >> $GITHUB_ENV
    - name: Restore celo-monorepo cache
      id: celo-monorepo-cache
      uses: actions/cache@v3
      with:
        path: celo-monorepo
        key: celo-monorepo-cache-${{ env.MONOREPO_COMMIT_ID }}-${{ env.CHECKOUT_MONOREPO_CACHE_VERSION }}
        restore-keys: |
          celo-monorepo-cache-
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: yarn
        cache-dependency-path: celo-monorepo/yarn.lock
    - name: Run e2e test
      run: |
        export E2E_TESTS_FORCE_USE_MYCELO=true
        cd celo-monorepo/packages/celotool
        ./ci_test_cip35.sh local "$GITHUB_WORKSPACE/geth"
