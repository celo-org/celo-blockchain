version: 2

defaults: &defaults
  working_directory: ~/app

rust_defaults: &rust_defaults
  <<: *defaults
  docker:
    - image: circleci/rust:latest

go_defaults: &go_defaults
  <<: *defaults
  docker:
    - image: circleci/go:latest

jobs:
  checkout-repo:
    <<: *rust_defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - persist_to_workspace:
          root: .
          paths: .

  bls-tests:
    <<: *rust_defaults
    steps:
      - attach_workspace:
          at: ~/app
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Install clippy and cargo-audit
          command: |
            cargo install cargo-audit
            rustup component add clippy
      - restore_cache:
          keys:
            - v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build
          command: cargo build --release
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/release
          key: v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run tests
          command: cargo test --release
          no_output_timeout: 30m
      - run:
          name: Check Style
          command: |
            cargo fmt --all -- --check
            cargo clippy --release --all-targets --all-features -- -D warnings
      - run:
          name: Audit Dependencies
          command: cargo audit --ignore RUSTSEC-2019-0019 # remove once https://github.com/scipr-lab/zexe/issues/135 is fixed
      - persist_to_workspace:
          root: .
          paths: target/release

  go-tests:
    <<: *go_defaults
    working_directory: ~/app
    docker:
      - image: circleci/golang:latest
    steps:
      - attach_workspace:
          at: ~/app
      - run: 
          name: Run Tests
          command: |
            cd ~/app/go
            go test ./bls ./snark
      - run:
          name: Build and run example
          command: |
            cd ~/app/
            LIB_DIR=`pwd`/target/release
            cd ./go/cmd
            CGO_LDFLAGS="-L$LIB_DIR -lepoch_snark -ldl -lm" go build -ldflags "-w" bls_example.go
            ./bls_example
 


workflows:
  version: 2
  run-tests:
    jobs:
      - checkout-repo
      - bls-tests:
          requires:
            - checkout-repo
      - go-tests:
          requires:
            - checkout-repo
            - bls-tests
